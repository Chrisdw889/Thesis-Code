clear all; close all;

%% Import filtered data

[filename, path] = uigetfile("*.mat");
load(strcat(path, filename));



%% Parameters

% Z params
Data.plotting.Z.Max = 3E-3;
Data.plotting.Z.Min = -1E-3;

isZBinsManual = 0; % Are you auto-generating the distance axis for the histograms?

if isZBinsManual
    Data.plotting.Z.numBins = 1000;
    Data.plotting.Z.delta = (Data.plotting.Z.Max - Data.plotting.Z.Min) / Data.plotting.Z.numBins;
elseif (Data.plotting.Z.Max - Data.plotting.Z.Min) < 2E-3
    Data.plotting.Z.numBins = floor((Data.plotting.Z.Max - Data.plotting.Z.Min) / Data.Zdelta);
    Data.plotting.Z.delta = Data.Zdelta;
else
    Data.plotting.Z.delta = 5 * Data.Zdelta;
    Data.plotting.Z.numBins = floor((Data.plotting.Z.Max - Data.plotting.Z.Min) / Data.plotting.Z.delta);
end

Data.plotting.Z.bins = Data.plotting.Z.Min : Data.plotting.Z.delta : Data.plotting.Z.Max;
Data.plotting.Z.maxCounts = 100;

% LogG params
Data.plotting.logG.numBins = 128;
Data.plotting.logG.Max = 0.8;
Data.plotting.logG.Min = -6.0;
Data.plotting.logG.delta = (Data.plotting.logG.Max - Data.plotting.logG.Min) / Data.plotting.logG.numBins;

Data.plotting.logG.bins = Data.plotting.logG.Min : Data.plotting.logG.delta : Data.plotting.logG.Max;
Data.plotting.logG.maxCounts = 10000;

Data.plotting.logG.gaussMax = -1.0;
Data.plotting.logG.gaussMin = -4.5;

% 2DHist params

Data.plotting.logGZ.maxCounts = 1000;

% Correlation Histogram Params

Data.plotting.Corr.CorrMax = 0.5;

% Set up coluring of figure

Data = addPlottingColour(Data);

% Fit Options

isFitting = 0;


%% 2D logG vs Z Histogram

[fig, Data] = create2DHistPlot(Data);


%% 1D Conductance Histograms (Vert and Horz)

Data = calculate1DHistCounts(Data);

[fig2, Data] = createVert1DHistPlot(Data, isFitting);

[fig3, Data] = createHorz1DHistPlot(Data);


%% Plateau Length Hisograms

[fig4, Data] = createPlatLengthHist(Data);

%% Conductance Correlation Histogram

[fig5, Data] = createCorrelHist(Data);


%% Functions

function [rFigure, rData] = create2DHistPlot(Data)

%Calculate Bin Data
goodLogGTraces = Data.logG(:, Data.passedTraces == 1);
goodZOffsetLengths = Data.ZOffsetLengths(Data.passedTraces == 1);

Data.plotting.logGZ.Hist2DBinCounts = zeros(Data.plotting.Z.numBins, Data.plotting.logG.numBins);
for i=1:Data.NumGoodTraces
    x = Data.Z - goodZOffsetLengths(i);
    y = goodLogGTraces(:, i)';
    xEdge = Data.plotting.Z.bins; 
    yEdge = Data.plotting.logG.bins;
    [temp2DBinCounts, Data.plotting.Z.bins, Data.plotting.logG.bins] = histcounts2(x, y, xEdge, yEdge);
    Data.plotting.logGZ.Hist2DBinCounts = Data.plotting.logGZ.Hist2DBinCounts + temp2DBinCounts;
end

%Create Figure
fig2DH = figure('Name', "2D Conductance-Displacement Histogram", ...
    'Colormap', Data.plotting.Colours.HeatBlue);
axes2DH = axes('Parent', fig2DH);

hold(axes2DH, 'on');
surfHist2D = surf(Data.plotting.Z.bins(2:end), Data.plotting.logG.bins(2:end), Data.plotting.logGZ.Hist2DBinCounts', ...
    'Parent', axes2DH, 'EdgeColor', 'none');
title("2D Conductance vs Displacement Histogram");

xlabel("\Delta z / um")
ylabel("logG/G_0")
zlabel('#');
axis(axes2DH, 'tight');

set(axes2DH, 'TickDir', 'out', 'XAxisLocation', 'bottom', ...
    'YLim', [Data.plotting.logG.Min Data.plotting.logG.Max], 'YAxisLocation', 'left', 'YDir', 'normal', 'YColor', Data.plotting.Colours.Black, ...
    'CLim', [0 Data.plotting.logGZ.maxCounts], ...
    'ZLim', [0 Data.plotting.logGZ.maxCounts]);
colormap(Data.plotting.Colours.HeatBlue);

colorbar('peer', axes2DH, 'Location', 'east');

view(0, 90);
hold(axes2DH, 'off');

rFigure = fig2DH;
rData = Data;

end

function rData = calculate1DHistCounts(Data)

Data.plotting.logG.Hist1DBinCounts = zeros(1, Data.plotting.logG.numBins);
goodLogGTraces = Data.logG(:, Data.passedTraces == 1);

for i=1:Data.NumGoodTraces
    [temp1DBinCounts, Data.plotting.logG.bins] = histcounts(goodLogGTraces(:, i), Data.plotting.logG.bins);
    Data.plotting.logG.All1DBinCounts(:, i) = temp1DBinCounts';
    Data.plotting.logG.Hist1DBinCounts = Data.plotting.logG.Hist1DBinCounts + temp1DBinCounts;
end

rData = Data;

end

function [rFigure, rData] = createVert1DHistPlot(Data, isFitting)

fig = figure('Name', "1D Conductance Histogram");
axes1DHV = axes('Parent', fig);

hold(axes1DHV, 'on');
bar1DHV = bar(Data.plotting.logG.bins(2:end), Data.plotting.logG.Hist1DBinCounts, ...
    'DisplayName', "Counts", 'EdgeColor', 'none', 'BarWidth', 1);

if isFitting
    fitIndexLogic = Data.plotting.logG.bins > Data.plotting.logG.gaussMin ...
        & Data.plotting.logG.bins < Data.plotting.logG.gaussMax;
    fitIndexLogic = fitIndexLogic(2:end);

    gaussFit = fit(Data.plotting.logG.bins(fitIndexLogic)', Data.plotting.logG.Hist1DBinCounts(fitIndexLogic)', 'Gauss2');
    fitplt = plot(gaussFit);

    legend(fitplt, "Gaussian Fit");

    fprintf("Conductance: %d with a std of %d \r\n", gaussFit.b1, gaussFit.c1);
end

title("1D Conductance Histogram");
xlabel("log(G/G_0)");
ylabel("#");

axis(axes1DHV, 'tight');

set(axes1DHV, 'XGrid', 'on', 'XLim', [Data.plotting.logG.Min Data.plotting.logG.Max], ...
    'YLim', [0 Data.plotting.logG.maxCounts]);
hold off;

rFigure = fig;
rData = Data;

end

function [rFigure, rData] = createHorz1DHistPlot(Data)

fig = figure('Name', "1D Conductance Histogram");
axes1DHH = axes('Parent', fig);

hold(axes1DHH, 'on');
bar1DHH = barh(Data.plotting.logG.bins(2:end), Data.plotting.logG.Hist1DBinCounts, ...
    'DisplayName', "Counts", 'EdgeColor', 'none', 'BarWidth', 1);



title("1D Conductance Histogram");
xlabel("#");
ylabel("logG/G_0");

axis(axes1DHH, 'tight');

set(axes1DHH, 'XGrid', 'on', 'XLim', [0 Data.plotting.logG.maxCounts], ...
    'YLim', [Data.plotting.logG.Min Data.plotting.logG.Max]);
hold off;

rData = Data;
rFigure = fig;

end

function [rFigure, rData] = createPlatLengthHist(Data)

Data.plotting.Z.PlateauHist = zeros(Data.plotting.Z.numBins, 1);
goodPlateauLengths = Data.PlateauLengths(Data.passedTraces==1);

for i=1:Data.NumGoodTraces
    
    test = ceil((goodPlateauLengths(i) - Data.plotting.Z.Min) / Data.plotting.Z.delta);
    if test > Data.plotting.Z.numBins || test <= 0
        % Do nothing
    else
        Data.plotting.Z.PlateauHist(test) = Data.plotting.Z.PlateauHist(test) + 1;
    end
    
end

fig = figure('Name', "Plateau Length Histogram");

axesPLH = axes('Parent', fig);

hold(axesPLH, 'on');
barPLH = bar(Data.plotting.Z.bins(2:end), Data.plotting.Z.PlateauHist,...
    'Parent', axesPLH, 'EdgeColor', 'none', 'BarWidth', 1);

%Gaussian fit
gaussFit = fit(Data.plotting.Z.bins(2:end)', Data.plotting.Z.PlateauHist, 'gauss1');
fitplt = plot(gaussFit);

legend(fitplt, "Gaussian Fit");

fprintf("Plateau Length: %d with a std of %d\r\n", gaussFit.b1, gaussFit.c1);

title("Plateau Length Histogram");
xlabel("\Delta Z / um");
ylabel("#");

axis(axesPLH, 'tight');

set(axesPLH, 'YLim', [0 Data.plotting.Z.maxCounts]);
hold off;

rData = Data;
rFigure = fig;

end

function [rFigure, rData] = createCorrelHist(Data)
% 
% Data.DataMatrix = zeros(Data.NumGoodTraces, Data.plotting.logG.numBins); % n by p, n = number of measurements, p = number of variables
% 
% for i=1:Data.NumGoodTraces
%     Data.DataMatrix(i, :) = Data.plotting.logG.All1DBinCounts(:, i);
% end
Data.plotting.logG.CorrHist = corr(Data.plotting.logG.All1DBinCounts');

fig = figure('Name', "Conductance Correlation Histogram", 'Colormap', jet);

axesCorrHist = axes('Parent', fig);

hold(axesCorrHist, 'on');
surfCorrHist = surf(Data.plotting.logG.bins(2:end), Data.plotting.logG.bins(2:end), Data.plotting.logG.CorrHist, ...
    'Parent', axesCorrHist, 'EdgeColor', 'none');

title('2D Conductance Correlation Histogram');
xlabel('log(G/G_0)');
ylabel('log(G/G_0)');
zlabel('\rho');

axis(axesCorrHist, 'tight', 'square');
set(axesCorrHist, 'Clim', [-1*Data.plotting.Corr.CorrMax Data.plotting.Corr.CorrMax], ...
    'Zlim', [-1*Data.plotting.Corr.CorrMax Data.plotting.Corr.CorrMax]);

colorbar('peer', axesCorrHist, 'location', 'south');

view(0, 90);
hold off;

rData= Data;
rFigure = fig;

end

function rData = addPlottingColour(Data)
Data.plotting.Colours.Black=  [0.000000000000000 0.000000000000000 0.000000000000000];
Data.plotting.Colours.Grey=   [0.650980392156863 0.650980392156863 0.650980392156863];
Data.plotting.Colours.Red=    [1.000000000000000 0.000000000000000 0.000000000000000];
Data.plotting.Colours.Orange= [0.850000000000000 0.330000000000000 0.100000000000000];
Data.plotting.Colours.Yellow= [0.929411768913269 0.694117665290833 0.125490203499794];
Data.plotting.Colours.Green=  [0.470588235294118 0.670588235294118 0.188235294117647];
Data.plotting.Colours.Blue=   [0.000000000000000 0.447000000000000 0.741000000000000];
Data.plotting.Colours.Purple= [0.494117647409439 0.184313729405403 0.556862771511078];
Data.plotting.Colours.HeatGreen= [1.000000000000000 1.000000000000000 1.000000000000000;0.991596639156342 0.994771242141724 0.98711484670639;0.983193278312683 0.989542484283447 0.974229693412781;0.974789917469025 0.984313726425171 0.961344540119171;0.966386556625366 0.979084968566895 0.948459386825562;0.957983195781708 0.973856210708618 0.935574233531952;0.949579834938049 0.968627452850342 0.922689080238342;0.941176474094391 0.963398694992065 0.909803926944733;0.932773113250732 0.958169937133789 0.896918773651123;0.924369752407074 0.952941179275513 0.884033620357513;0.915966391563416 0.947712421417236 0.871148467063904;0.907563030719757 0.94248366355896 0.858263313770294;0.899159669876099 0.937254905700684 0.845378160476685;0.89075630903244 0.932026147842407 0.832493007183075;0.882352948188782 0.926797389984131 0.819607853889465;0.873949587345123 0.921568632125854 0.806722700595856;0.865546226501465 0.916339874267578 0.793837547302246;0.857142865657806 0.911111116409302 0.780952394008636;0.848739504814148 0.905882358551025 0.768067240715027;0.84033614397049 0.900653600692749 0.755182087421417;0.831932783126831 0.895424842834473 0.742296934127808;0.823529422283173 0.890196084976196 0.729411780834198;0.815126061439514 0.88496732711792 0.716526627540588;0.806722700595856 0.879738569259644 0.703641474246979;0.798319339752197 0.874509811401367 0.690756320953369;0.789915978908539 0.869281053543091 0.67787116765976;0.78151261806488 0.864052295684814 0.66498601436615;0.773109257221222 0.858823537826538 0.65210086107254;0.764705896377563 0.853594779968262 0.639215707778931;0.756302535533905 0.848366022109985 0.626330554485321;0.747899174690247 0.843137264251709 0.613445401191711;0.739495813846588 0.837908506393433 0.600560247898102;0.73109245300293 0.832679748535156 0.587675094604492;0.722689092159271 0.82745099067688 0.574789941310883;0.714285731315613 0.822222232818604 0.561904788017273;0.705882370471954 0.816993474960327 0.549019634723663;0.697479009628296 0.811764717102051 0.536134481430054;0.689075648784637 0.806535959243774 0.523249328136444;0.680672287940979 0.801307201385498 0.510364174842834;0.672268927097321 0.796078443527222 0.497478991746902;0.663865566253662 0.790849685668945 0.484593838453293;0.655462205410004 0.785620927810669 0.471708685159683;0.647058844566345 0.780392169952393 0.458823531866074;0.638655483722687 0.775163412094116 0.445938378572464;0.630252122879028 0.76993465423584 0.433053225278854;0.62184876203537 0.764705896377563 0.420168071985245;0.613445401191711 0.759477138519287 0.407282918691635;0.605042040348053 0.754248380661011 0.394397765398026;0.596638679504395 0.749019622802734 0.381512612104416;0.588235318660736 0.743790864944458 0.368627458810806;0.579831957817078 0.738562107086182 0.355742305517197;0.571428596973419 0.733333349227905 0.342857152223587;0.563025236129761 0.728104591369629 0.329971998929977;0.554621875286102 0.722875833511353 0.317086845636368;0.546218514442444 0.717647075653076 0.304201692342758;0.537815153598785 0.7124183177948 0.291316539049149;0.529411792755127 0.707189559936523 0.278431385755539;0.521008431911469 0.701960802078247 0.265546232461929;0.51260507106781 0.696732044219971 0.25266107916832;0.504201710224152 0.691503286361694 0.239775910973549;0.495798319578171 0.686274528503418 0.226890757679939;0.487394958734512 0.681045770645142 0.21400560438633;0.478991597890854 0.675817012786865 0.20112045109272;0.470588237047195 0.670588254928589 0.18823529779911];
Data.plotting.Colours.HeatBlue = [1.000000000000000 1.000000000000000 1.000000000000000;0.98412698507309 0.991285383701324 0.995891690254211;0.968253970146179 0.982570827007294 0.991783380508423;0.952380955219269 0.973856210708618 0.987675070762634;0.936507940292358 0.965141594409943 0.983566761016846;0.920634925365448 0.956427037715912 0.979458451271057;0.904761910438538 0.947712421417236 0.975350141525269;0.888888895511627 0.938997805118561 0.97124183177948;0.873015880584717 0.93028324842453 0.967133522033691;0.857142865657806 0.921568632125854 0.963025212287903;0.841269850730896 0.912854015827179 0.958916902542114;0.825396835803986 0.904139459133148 0.954808592796326;0.809523820877075 0.895424842834473 0.950700283050537;0.793650805950165 0.886710226535797 0.946591973304749;0.777777791023254 0.877995669841766 0.94248366355896;0.761904776096344 0.869281053543091 0.938375353813171;0.746031761169434 0.860566437244415 0.934267044067383;0.730158746242523 0.851851880550385 0.930158734321594;0.714285731315613 0.843137264251709 0.926050424575806;0.698412716388702 0.834422647953033 0.921942114830017;0.682539701461792 0.825708091259003 0.917833805084229;0.666666686534882 0.816993474960327 0.91372549533844;0.650793671607971 0.808278858661652 0.909617185592651;0.634920656681061 0.799564242362976 0.905508875846863;0.61904764175415 0.790849685668945 0.901400566101074;0.60317462682724 0.78213506937027 0.897292256355286;0.58730161190033 0.773420453071594 0.893183946609497;0.571428596973419 0.764705896377563 0.889075636863708;0.555555582046509 0.755991280078888 0.88496732711792;0.539682567119598 0.747276663780212 0.880859017372131;0.523809552192688 0.738562107086182 0.876750707626343;0.507936537265778 0.729847490787506 0.872642397880554;0.492063492536545 0.721132874488831 0.868534088134766;0.476190477609634 0.7124183177948 0.864425778388977;0.460317462682724 0.703703701496124 0.860317468643188;0.444444447755814 0.694989085197449 0.8562091588974;0.428571432828903 0.686274528503418 0.852100849151611;0.412698417901993 0.677559912204742 0.847992539405823;0.396825402975082 0.668845295906067 0.843884229660034;0.380952388048172 0.660130739212036 0.839775919914246;0.365079373121262 0.651416122913361 0.835667610168457;0.349206358194351 0.642701506614685 0.831559300422668;0.333333343267441 0.633986949920654 0.82745099067688;0.31746032834053 0.625272333621979 0.823342680931091;0.30158731341362 0.616557717323303 0.819234371185303;0.28571429848671 0.607843160629272 0.815126061439514;0.269841283559799 0.599128544330597 0.811017751693726;0.253968268632889 0.590413928031921 0.806909441947937;0.238095238804817 0.581699371337891 0.802801132202148;0.222222223877907 0.572984755039215 0.79869282245636;0.206349208950996 0.56427013874054 0.794584512710571;0.190476194024086 0.555555582046509 0.790476202964783;0.174603179097176 0.546840965747833 0.786367893218994;0.158730164170265 0.538126349449158 0.782259583473206;0.142857149243355 0.529411792755127 0.778151273727417;0.126984134316444 0.520697176456451 0.774042963981628;0.111111111938953 0.511982560157776 0.76993465423584;0.095238097012043 0.503268003463745 0.765826344490051;0.0793650820851326 0.49455338716507 0.761718034744263;0.0634920671582222 0.485838770866394 0.757609724998474;0.0476190485060215 0.477124184370041 0.753501415252686;0.0317460335791111 0.468409597873688 0.749393105506897;0.0158730167895555 0.459694981575012 0.745284795761108;0 0.450980395078659 0.74117648601532];
Data.plotting.Colours.HeatOrange=[1.000000000000000 1.000000000000000 1.000000000000000;0.991596639156342 0.994771242141724 0.98711484670639;0.983193278312683 0.989542484283447 0.974229693412781;0.974789917469025 0.984313726425171 0.961344540119171;0.966386556625366 0.979084968566895 0.948459386825562;0.957983195781708 0.973856210708618 0.935574233531952;0.949579834938049 0.968627452850342 0.922689080238342;0.941176474094391 0.963398694992065 0.909803926944733;0.932773113250732 0.958169937133789 0.896918773651123;0.924369752407074 0.952941179275513 0.884033620357513;0.915966391563416 0.947712421417236 0.871148467063904;0.907563030719757 0.94248366355896 0.858263313770294;0.899159669876099 0.937254905700684 0.845378160476685;0.89075630903244 0.932026147842407 0.832493007183075;0.882352948188782 0.926797389984131 0.819607853889465;0.873949587345123 0.921568632125854 0.806722700595856;0.865546226501465 0.916339874267578 0.793837547302246;0.857142865657806 0.911111116409302 0.780952394008636;0.848739504814148 0.905882358551025 0.768067240715027;0.84033614397049 0.900653600692749 0.755182087421417;0.831932783126831 0.895424842834473 0.742296934127808;0.823529422283173 0.890196084976196 0.729411780834198;0.815126061439514 0.88496732711792 0.716526627540588;0.806722700595856 0.879738569259644 0.703641474246979;0.798319339752197 0.874509811401367 0.690756320953369;0.789915978908539 0.869281053543091 0.67787116765976;0.78151261806488 0.864052295684814 0.66498601436615;0.773109257221222 0.858823537826538 0.65210086107254;0.764705896377563 0.853594779968262 0.639215707778931;0.756302535533905 0.848366022109985 0.626330554485321;0.747899174690247 0.843137264251709 0.613445401191711;0.739495813846588 0.837908506393433 0.600560247898102;0.73109245300293 0.832679748535156 0.587675094604492;0.722689092159271 0.82745099067688 0.574789941310883;0.714285731315613 0.822222232818604 0.561904788017273;0.705882370471954 0.816993474960327 0.549019634723663;0.697479009628296 0.811764717102051 0.536134481430054;0.689075648784637 0.806535959243774 0.523249328136444;0.680672287940979 0.801307201385498 0.510364174842834;0.672268927097321 0.796078443527222 0.497478991746902;0.663865566253662 0.790849685668945 0.484593838453293;0.655462205410004 0.785620927810669 0.471708685159683;0.647058844566345 0.780392169952393 0.458823531866074;0.638655483722687 0.775163412094116 0.445938378572464;0.630252122879028 0.76993465423584 0.433053225278854;0.62184876203537 0.764705896377563 0.420168071985245;0.613445401191711 0.759477138519287 0.407282918691635;0.605042040348053 0.754248380661011 0.394397765398026;0.596638679504395 0.749019622802734 0.381512612104416;0.588235318660736 0.743790864944458 0.368627458810806;0.579831957817078 0.738562107086182 0.355742305517197;0.571428596973419 0.733333349227905 0.342857152223587;0.563025236129761 0.728104591369629 0.329971998929977;0.554621875286102 0.722875833511353 0.317086845636368;0.546218514442444 0.717647075653076 0.304201692342758;0.537815153598785 0.7124183177948 0.291316539049149;0.529411792755127 0.707189559936523 0.278431385755539;0.521008431911469 0.701960802078247 0.265546232461929;0.51260507106781 0.696732044219971 0.25266107916832;0.504201710224152 0.691503286361694 0.239775910973549;0.495798319578171 0.686274528503418 0.226890757679939;0.487394958734512 0.681045770645142 0.21400560438633;0.478991597890854 0.675817012786865 0.20112045109272;0.470588237047195 0.670588254928589 0.18823529779911];


rData = Data;

end
